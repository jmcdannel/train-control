{"version":3,"sources":["Turnouts/switch.svg","Turnouts/Settings.js","Api.js","Turnouts/Tunrout.js","Layout/Layout.js","Layout/Switch.js","Layout/MapControl.js","theme.js","App.js","serviceWorker.js","index.js","Layout/images/IDAWANY-base.png","Layout/images/IDAWANY-blueline.png","Layout/images/IDAWANY-brownline.png","Layout/images/IDAWANY-greenline.png","Layout/images/IDAWANY-magentaline.png","Layout/images/IDAWANY-orangeline.png","Layout/images/IDAWANY-purpleline.png","Layout/images/IDAWANY-redline.png","Layout/images/IDAWANY-yellowline.png","Layout/images/IDAWANY-switches.png"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref","svgRef","title","props","createElement","width","height","viewBox","xmlSpace","style","fillRule","clipRule","strokeLinecap","strokeLinejoin","strokeMiterlimit","ref","id","serifid","d","fill","strokeWidth","x","y","fontFamily","fontWeight","fontSize","ForwardRef","forwardRef","getInverse","degrees","Settings","open","config","onClose","onChange","useState","name","setName","line","setLine","straight","setStraight","divergent","setDivergent","isLoading","setIsLoading","isLocked","setIsLocked","isLinked","setIsLinked","isPristine","setIsPristine","hasError","setHasError","handleClose","console","log","handleServo","sendDegrees","then","resp","catch","err","finally","handleSave","a","error","isValidDegrees","value","intValue","parseInt","test","current","Dialog","maxWidth","aria-labelledby","DialogTitle","Divider","DialogContent","Box","mt","mb","DialogContentText","Grid","container","spacing","item","xs","TextField","margin","label","size","disabled","InputProps","startAdornment","InputAdornment","position","e","fullWidth","IconButton","aria-label","onClick","val","my","ButtonGroup","variant","color","Button","startIcon","CircularProgress","className","green","DialogActions","Error","fetch","apiHost","response","json","data","method","cache","headers","body","JSON","stringify","linesConfig","Colors","img","redLineImg","greenLineImg","magentaLineImg","yellowLineImg","orangeLineImg","blueLineImg","brownLineImg","purpleLineImg","api","get","put","post","delete","Turnout","linkedTurnout","linked","isDivergent","setIsDivergent","setError","showSettings","setShowSettings","relay","crossover","reverse","abbr","defaultOrientation","useEffect","handleToggle","push","toString","handleReset","handleLinkedChange","event","checked","Card","CardActionArea","CardMedia","component","CardContent","Chip","icon","backgroundColor","find","l","Typography","gutterBottom","whiteSpace","FormControlLabel","control","Switch","CardActions","Snackbar","autoHideDuration","reason","undefined","message","Layout","turnouts","hideLines","initialLines","map","visible","includes","lines","setLines","showTurnouts","setShowTurnouts","toggleLine","_line","Paper","direction","sm","idx","opacity","onDelete","deleteIcon","clickable","FormGroup","options","classes","filter","join","getSVGClassName","src","baseImg","alt","switchesImg","TurnoutSwitch","handleClick","MapControl","scale","translation","zoomState","setZoomState","getTurnoutById","t","getLinkedTurnout","turnout","defaultScale","defaultTranslation","minScale","maxScale","showControls","theme","createMuiTheme","typography","useNextVariants","palette","type","primary","secondary","background","default","App","page","setPage","status","setTurnouts","turnoutList","setTurnoutList","fetchTurnouts","handleChange","results","r","getResults","newTurnouts","match","CssBaseline","display","flexDirection","AppBar","Toolbar","window","flexGrow","alignContent","Container","BottomNavigation","newValue","showLabels","BottomNavigationAction","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.66b54e89.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgSwitch = function SvgSwitch(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: \"100%\",\n    height: \"100%\",\n    viewBox: \"8 0 28 46\",\n    xmlSpace: \"preserve\",\n    style: {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      strokeLinecap: \"square\",\n      strokeLinejoin: \"round\",\n      strokeMiterlimit: 1.5\n    },\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, React.createElement(\"g\", {\n    id: \"Switch-2A\",\n    serifid: \"Switch 2A\"\n  }, React.createElement(\"g\", {\n    id: \"Switch\"\n  }, React.createElement(\"path\", {\n    d: \"M34.119,43.607l0,-28.947\",\n    style: {\n      fill: \"none\",\n      strokeWidth: 2\n    }\n  }), React.createElement(\"path\", {\n    id: \"straight-outer\",\n    d: \"M34.119,1.955l0,10.818\",\n    style: {\n      fill: \"none\",\n      strokeWidth: 2\n    }\n  }), React.createElement(\"path\", {\n    id: \"straight-inner\",\n    d: \"M26.828,1.958l0,10.818\",\n    style: {\n      fill: \"none\",\n      strokeWidth: 2\n    }\n  }), React.createElement(\"path\", {\n    d: \"M26.828,24.131l0,19.64\",\n    style: {\n      fill: \"none\",\n      strokeWidth: 2\n    }\n  }), React.createElement(\"path\", {\n    id: \"divergent-inner\",\n    d: \"M26.416,23.186l-16.723,-16.722\",\n    style: {\n      fill: \"none\",\n      strokeWidth: 2\n    }\n  }), React.createElement(\"path\", {\n    id: \"divergent-outer\",\n    d: \"M25.833,12.419l-10.814,-10.161\",\n    style: {\n      fill: \"none\",\n      strokeWidth: 2\n    }\n  })), React.createElement(\"g\", {\n    id: \"Label\"\n  }, React.createElement(\"g\", null, React.createElement(\"path\", {\n    d: \"M26.766,33.785l-3.609,0\",\n    style: {\n      fill: \"none\",\n      strokeWidth: 2\n    }\n  }), React.createElement(\"path\", {\n    d: \"M1.959,29.305c0,-2.665 2.164,-4.828 4.828,-4.828l9.656,0c2.665,0 4.829,2.163 4.829,4.828l0,9.656c0,2.665 -2.164,4.828 -4.829,4.828l-9.656,0c-2.664,0 -4.828,-2.163 -4.828,-4.828l0,-9.656Z\",\n    style: {\n      fill: \"none\",\n      strokeWidth: 2\n    }\n  })), React.createElement(\"text\", {\n    x: \"3.619px\",\n    y: \"37.709px\",\n    style: {\n      fontFamily: \"'Arial-BoldMT', 'Arial', sans-serif\",\n      fontWeight: 700,\n      fontSize: 10\n    }\n  }, \"101\"))));\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgSwitch, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/switch.e1411ea7.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport CallSplit from '@material-ui/icons/CallSplit';\nimport { green } from '@material-ui/core/colors';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport IconButton from '@material-ui/core/IconButton';\nimport DoneIcon from '@material-ui/icons/Done';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport LinkIcon from '@material-ui/icons/Link';\nimport LinkOffIcon from '@material-ui/icons/LinkOff';\nimport Info from '@material-ui/icons/Info';\nimport Lock from '@material-ui/icons/Lock';\nimport Bookmark from '@material-ui/icons/Bookmark';\nimport LockOpen from '@material-ui/icons/LockOpen';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\nconst getInverse = degrees => {\n  return degrees < 90\n    ? 90 + (90 - degrees)\n    : 90 - (degrees - 90);\n}\n\nexport const Settings = props => {\n  const { open, config, onClose, onChange } = props;\n  const { id } = config;\n  const [name, setName] = useState(config.name);\n  const [line, setLine] = useState(config.line);\n  const [straight, setStraight] = useState(config.straight);\n  const [divergent, setDivergent] = useState(config.divergent);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLocked, setIsLocked] = useState(true);\n  const [isLinked, setIsLinked] = useState(config.straight === getInverse(config.divergent));\n  const [isPristine, setIsPristine] = useState(true);\n  const [hasError, setHasError] = useState(false);\n\n  const handleClose = () => {\n    console.log(props);\n    onClose();\n  };\n\n  const handleLock = () => setIsLocked(true);\n\n  const handleUnlock = () => setIsLocked(false);\n\n  const handleLink = () => {\n    setIsLinked(true);\n    setDivergent(straight);\n  }\n\n  const handleUnlink = () => setIsLinked(false);\n\n  const handleServo = degrees => {\n    if (isLoading) { \n      return;\n    }\n    setIsLoading(true);\n    setHasError(false);\n    sendDegrees(degrees).then(resp => {\n      console.log('complete', resp);\n      setIsPristine(false);\n    }).catch(err => {\n      console.log(err);\n      setHasError(true);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  }\n\n  const handleSave = async () => {\n    try {\n      setIsLoading(true);\n      setHasError(false);\n      await onChange([{\n        id,\n        name,\n        line,\n        straight,\n        divergent\n      }]);\n      onClose();\n    } catch (err) {\n      console.error(err);\n      setHasError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  const handleResetServo = () => {\n    setStraight(config.straight);\n    setDivergent(config.divergent);\n  }\n\n  const handleStraightChange = e => {\n    const val = parseInt(e.target.value);\n    if (isValidDegrees(val)) {\n      setStraight(val);\n      if (isLinked) {\n        setDivergent(getInverse(val));\n      }\n    }\n  }\n\n  const isValidDegrees = value => {\n    const intValue = parseInt(value);\n    return (value === '' || \n      (/^\\d+$/.test(value) && intValue >= 0 && intValue <= 360));\n  }\n\n  const handleDivergentChange = e => {\n    const val = parseInt(e.target.value);\n    if (isValidDegrees(val)) {\n      setDivergent(val);\n      if (isLinked) {\n        setStraight(getInverse(val));\n      }\n    }\n  }\n  const sendDegrees = async degrees => {\n    return await onChange([{ id, current: parseInt(degrees) }]);\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} maxWidth=\"md\" aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Turnout Settings</DialogTitle>\n      <Divider />\n      <DialogContent>\n        <Box mt={1} mb={3}>\n          <DialogContentText>\n            Changes are not saved until you click save.\n          </DialogContentText>\n          <Grid container spacing={1}>\n            <Grid item xs={3}>\n              <TextField\n                margin=\"dense\"\n                id=\"number\"\n                label=\"Switch Num\"\n                size=\"small\"\n                disabled\n                value={id}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <CallSplit />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <TextField\n                margin=\"dense\"\n                id=\"line\"\n                label=\"Line\"\n                size=\"small\"\n                value={line}\n                onChange={e => setLine(e.target.value)}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <Info />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                fullWidth\n                margin=\"dense\"\n                id=\"name\"\n                label=\"Switch Name\"\n                value={name}\n                onChange={e => setName(e.target.value)}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <Bookmark />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n          </Grid>\n        </Box>\n      </DialogContent>\n      <Divider />\n      <DialogTitle id=\"form-servo-title\">\n        {!isLocked && (\n          <IconButton aria-label=\"lock\" onClick={handleLock}>\n            <LockOpen />\n          </IconButton>\n        )}\n        {isLocked && (\n          <IconButton aria-label=\"lock\" onClick={handleUnlock}>\n            <Lock />\n          </IconButton>\n        )}\n        Configure Servo\n      </DialogTitle>\n      <DialogContent>\n        <Grid container spacing={1}>\n          <Grid item xs={9}>\n            <TextField\n              margin=\"dense\"\n              id=\"straight\"\n              label=\"Straight\"\n              width=\"100px\"\n              disabled={isLocked || isLoading}\n              value={straight}\n              onChange={handleStraightChange}\n            />\n            {isLinked && (\n              <IconButton aria-label=\"unlink\" onClick={handleUnlink} disabled={isLocked || isLoading}>\n                <LinkIcon />\n              </IconButton>\n            )}\n            {!isLinked && (\n              <IconButton aria-label=\"link\" onClick={handleLink} disabled={isLocked || isLoading}>\n                <LinkOffIcon />\n              </IconButton>\n            )}\n            <TextField\n              margin=\"dense\"\n              id=\"divergent\"\n              label=\"Divergent\"\n              width=\"100px\"\n              disabled={isLocked || isLoading}\n              value={divergent}\n              onChange={handleDivergentChange}\n            />\n            <Box my={1}>\n              <ButtonGroup variant=\"outlined\" color=\"primary\">\n                <Button onClick={handleResetServo} disabled={isLocked || isLoading} startIcon={<RestoreIcon />}>\n                  Reset\n                </Button>\n                <Button onClick={() => handleServo(straight)} disabled={isLoading}>\n                  Straight\n                </Button>\n                <Button onClick={() => handleServo(divergent)} disabled={isLoading}>\n                  Divergent\n                </Button>\n                <Button onClick={() => handleServo(90)} disabled={isLoading}>\n                  90&deg;\n                </Button>\n              </ButtonGroup>\n              \n            </Box>\n            </Grid>\n            <Grid item xs={3}>\n              {isLoading && (<CircularProgress color=\"primary\" className=\"spinner\" />)}\n              {!isLoading && !isPristine && (<DoneIcon color=\"action\" style={{ color: green[500], fontSize: 80 }} />)}\n              {hasError && !isLoading && (<ErrorIcon color=\"error\" style={{ fontSize: 80 }} />)}\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button onClick={handleSave} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n  );\n}\n\nexport default Settings;\n","import * as Colors from 'material-ui/colors';\nimport blueLineImg from './Layout/images/IDAWANY-blueline.png';\nimport brownLineImg from './Layout/images/IDAWANY-brownline.png';\nimport greenLineImg from './Layout/images/IDAWANY-greenline.png';\nimport magentaLineImg from './Layout/images/IDAWANY-magentaline.png';\nimport orangeLineImg from './Layout/images/IDAWANY-orangeline.png';\nimport purpleLineImg from './Layout/images/IDAWANY-purpleline.png';\nimport redLineImg from './Layout/images/IDAWANY-redline.png';\nimport yellowLineImg from './Layout/images/IDAWANY-yellowline.png';\n\nasync function createTurnout() {\n  throw new Error('Not implemented');\n}\n\nasync function readTurnout(id = null) {\n  try {\n    const response = id !== null\n      ? await fetch(`${apiHost}/turnouts/${id}`)\n      : await fetch(`${apiHost}/turnouts`);\n    return response.json();\n  } catch (err) {\n    console.error(err);\n    throw new Error('Unable to read Turnout(s)', id, `id=${id}`);\n  }\n}\n\nasync function updateTurnout(data) {\n  try {\n    const response = await fetch(`${apiHost}/turnouts/${data.id}`, {\n      method: 'PUT',\n      cache: 'no-cache',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    return await response.json();\n  } catch (err) {\n    console.error(err)\n    throw new Error('Unable to update Turnout', data);\n  }\n}\n\nasync function deleteTurnout(id) {\n  throw new Error('Not implemented');\n}\n\nexport const linesConfig = [\n  { name: 'Red', color: Colors.red[500], img: redLineImg },\n  { name: 'Green', color: Colors.green[500], img: greenLineImg },\n  { name: 'Magenta', color: Colors.pink[500], img: magentaLineImg },\n  { name: 'Yellow', color: Colors.yellow[500], img: yellowLineImg },\n  { name: 'Orange', color: Colors.orange[500], img: orangeLineImg },\n  { name: 'Blue', color: Colors.blue[500], img: blueLineImg },\n  { name: 'Brown', color: Colors.brown[500], img: brownLineImg },\n  { name: 'Purple', color: Colors.purple[500], img: purpleLineImg }\n];\n\n// export const apiHost = 'http://0.0.0.0:5000';\nexport const apiHost = 'https://traincontrol:5000';\n\n\nexport const api = {\n  get: readTurnout,\n  put: updateTurnout,\n  post: createTurnout,\n  delete: deleteTurnout\n}\n\nexport default api;\n","import React, { useState, useEffect } from 'react';\n// import SwitchImg from './switch.svg';\nimport { ReactComponent as Logo } from './switch.svg';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Chip from '@material-ui/core/Chip';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nimport CallSplit from '@material-ui/icons/CallSplit';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport MapIcon from '@material-ui/icons/Map';\nimport PowerIcon from '@material-ui/icons/Power';\nimport TuneIcon from '@material-ui/icons/Tune';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport LinkIcon from '@material-ui/icons/Link';\nimport LinkOffIcon from '@material-ui/icons/LinkOff';\nimport Avatar from '@material-ui/core/Avatar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport Settings from './Settings';\nimport { api, linesConfig } from '../Api';\nimport './Turnout.scss';\n\nexport const Turnout = props => {\n\n  const { config, linked: linkedTurnout, onChange  } = props;\n\n  const [isDivergent, setIsDivergent] = useState(config.current === config.divergent);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [isPristine, setIsPristine] = useState(true);\n  const [showSettings, setShowSettings] = useState(false);\n  const [isLinked, setIsLinked] = useState(true);\n  const { current, relay, crossover, reverse, name, id, line, label, abbr, straight, divergent, 'default': defaultOrientation } = config;\n\n  useEffect(() => {\n    setIsDivergent((current === divergent));\n  }, [current, straight, divergent]);\n\n  const handleToggle = async e => {\n    if (isLoading) { \n      return;\n    }\n    try {\n      const data = [{ id, current: isDivergent ? straight : divergent }];\n      setIsLoading(true);\n      setIsPristine(false);\n\n      if (linkedTurnout && isLinked) {\n        data.push({\n          id: linkedTurnout.id,\n          current: isDivergent \n            ? linkedTurnout.straight \n            : linkedTurnout.divergent\n        })\n      }\n      await onChange(data);\n\n    } catch (err) {\n      console.error(err);\n      setError(err.toString());\n    } finally {\n      setIsLoading(false);\n    }\n    \n  }\n\n\n  const handleReset = async e => {\n    const data = { id, current: defaultOrientation === 'straight' ? straight : divergent };\n    await onChange([data]);\n  }\n\n  const handleSettings = () => setShowSettings(true);\n\n  const hideSettings = () => setShowSettings(false);\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setError(undefined);\n  };\n\n  const handleLinkedChange = event => {\n    setIsLinked(event.target.checked);\n  }\n\n\treturn (\n    <Card className=\"turnout\">\n      <CardActionArea className={`media ${isLoading ? 'loading' : ''}`} onClick={handleToggle}>\n        <CardMedia\n          component=\"div\"\n          height=\"100%\"\n          title=\"Turnout State\"\n          className=\"media-container\"        \n        >\n          <div className=\"svg-wrapper\">\n            <Logo width=\"90\" className={`turnout-image ${isDivergent ? 'divergent' : 'straight'}`} />\n          </div>\n          {isLoading && (<CircularProgress color=\"primary\" className=\"spinner\" />)}\n        </CardMedia>\n      </CardActionArea>\n      <CardContent className=\"information\">\n        <Box>\n            <Chip\n              label={`${label}`}\n              icon={<CallSplit />}\n              variant=\"outlined\"\n              className=\"chip\"\n              size=\"small\"\n              style={{ backgroundColor: linesConfig.find(l => l.name === line).color }}\n            />\n            {isLoading || isPristine \n              ? <LinkOffIcon style={{color: 'gray'}} /> \n              :  <LinkIcon style={{color: 'green'}} />}\n            {relay && (\n              <PowerIcon style={{ color: 'green'}}\n            />\n            )}\n          </Box>\n          <Box my={1}>\n            <Typography component=\"h6\" variant=\"h6\" gutterBottom>\n              {name} <strong style={{whiteSpace:\"nowrap\"}}>({abbr})</strong>\n            </Typography>\n            <Typography component=\"small\" gutterBottom>\n              Angle: {current}\n            </Typography>\n            {crossover && (<Box><FormControlLabel\n              control={<Switch checked={isLinked} onChange={handleLinkedChange} name=\"islinked\" />}\n              label={`Link crossover: ${linkedTurnout.label}`}\n            /></Box>)}\n            \n            {reverse && (<Box><FormControlLabel\n              control={<Switch checked={isLinked} onChange={handleLinkedChange} name=\"islinked\" />}\n              label={`Link reverse loop switch: ${linkedTurnout.label}`}\n            /></Box>)}\n          </Box>\n      </CardContent>\n      <CardActions className=\"actions\">\n        <Button \n          variant=\"contained\" \n          color=\"primary\" \n          onClick={handleToggle}\n          startIcon={<CallSplit />}>\n            Toggle\n        </Button>\n        <span>\n          <IconButton variant=\"outlined\" onClick={handleReset} color=\"primary\" disabled={isLoading}>\n            <RestoreIcon />\n          </IconButton>\n          {/* <IconButton variant=\"outlined\" color=\"default\">\n            <MapIcon />\n          </IconButton> */}\n          <IconButton variant=\"outlined\" color=\"default\" onClick={handleSettings}>\n            <TuneIcon />\n          </IconButton>\n        </span>\n      </CardActions>\n      <Settings \n        open={showSettings} \n        config={config} \n        onClose={hideSettings}\n        onChange={onChange} \n      />\n\n      <Snackbar open={!!error} autoHideDuration={6000} onClose={handleClose} message={error} />\n    </Card>\n\t)\n\n}\n\nexport default Turnout;","import React, { useState } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Typography from '@material-ui/core/Typography';\nimport DoneIcon from '@material-ui/icons/Done';\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\nimport { linesConfig } from '../Api';\nimport baseImg from './images/IDAWANY-base.png';\nimport switchesImg from './images/IDAWANY-switches.png';\n// import idawahnyImg from './images/IDAWANY.png';\nimport './Layout.scss';\n\nfunction Layout(props) {\n\n  const { turnouts } = props;\n\n  const hideLines = ['Brown', 'Blue', 'Purple'];\n  const initialLines = linesConfig.map(line => ({ visible: !hideLines.includes(line.name), ...line }));\n\n  const [lines, setLines] = useState(initialLines);\n  const [showTurnouts, setShowTurnouts] = useState(false);\n\n  const handleTurnoutSwitch = e => {\n    setShowTurnouts(e.target.checked);\n  }\n\n  const toggleLine = _line => {\n    const line = lines.find(line => line.name === _line.name);\n    line.visible = !line.visible;\n    setLines([...lines]);\n  }\n\n  const getSVGClassName = () => {\n    const classes = \n      lines.filter(line => line.visible).map(line => `show-line-${line.line}`);\n    if (showTurnouts) {\n      classes.push('show-turnouts');\n    }\n    return `layout-img ${classes.join(' ')}`;\n  }\n\n  return (\n    <Paper>\n      <Grid container width=\"100%\" direction=\"row\" >\n        <Grid item xs={12} sm={2} className=\"filters\">\n          \n          <Box>\n            <Typography component=\"h5\" variant=\"h5\" gutterBottom>\n              Lines\n            </Typography>\n\n            {lines.map((line, idx) => (\n              <Chip\n                key={idx}\n                label={`${line.name} Line`}\n                variant=\"outlined\"\n                className=\"line-toggle\"\n                style={{ backgroundColor: line.color, opacity: line.visible ? 1 : 0.3 }}\n                onClick={() => toggleLine(line)}\n                onDelete={() => toggleLine(line)}\n                deleteIcon={line.visible ? <DoneIcon /> : null}\n                clickable\n              />\n            ))}\n            <FormGroup>\n              <FormControlLabel control={\n                <Switch value=\"showTurnouts\" onChange={handleTurnoutSwitch} checked={showTurnouts} />\n              } label=\"Show Turnouts\" />\n            </FormGroup>\n          </Box>\n\n        </Grid>\n        <Grid item xs={12} sm={10}>\n          <TransformWrapper width=\"100%\" options={{\n          }}>\n            <TransformComponent width=\"100%\">\n              <div className={getSVGClassName()}>\n                <img src={baseImg} className=\"layout-base-layer\"  alt=\"test\" width=\"100%\" />\n                {lines.filter(line => line.visible).map((line, idx) => (\n                  <img key={idx} src={line.img} className=\"layout-layer\" alt=\"test\" width=\"100%\" />\n                ))}\n                {showTurnouts && (<img src={switchesImg} className=\"layout-layer\" alt=\"test\" width=\"100%\" />)}\n              </div>\n            </TransformComponent>\n          </TransformWrapper>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n\nexport default Layout;\n","import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CallSplit from '@material-ui/icons/CallSplit';\nimport api from '../Api';\n\nimport './Switch.scss';\n\n\nfunction TurnoutSwitch(props) {\n\n  const { config, linked: linkedTurnout, onChange  } = props;\n  const { relay, crossover, reverse, name, id, label, line, abbr, current, straight, divergent, 'default': defaultOrientation } = config;\n\n  const [isDivergent, setIsDivergent] = useState(config.current === config.divergent);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsDivergent((current === divergent));\n  }, [current, straight, divergent]);\n\n  const handleClick = async () => {\n    if (isLoading) { \n      return;\n    }\n    try {\n      const data = [{ id, current: isDivergent ? straight : divergent }];\n      setIsLoading(true);\n      if (linkedTurnout) {\n        data.push({\n          id: linkedTurnout.id,\n          current: isDivergent \n            ? linkedTurnout.straight \n            : linkedTurnout.divergent\n        })\n      }\n      await onChange(data);\n\n    } catch (err) {\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n\n  return (\n      <div className={`switch switch-${id} box no-cursor`}>\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          size=\"small\"\n          startIcon={<CallSplit />}\n          onClick={handleClick}\n          className=\"cursor\"\n        >\n          <strong>{label}</strong>\n        </Button>\n  \n        <span className={`straight-indicator straight-indicator--${isDivergent ? 'off' : 'on'}`}></span>\n        <span className={`divergent-indicator divergent-indicator--${isDivergent ? 'on' : 'off'}`}></span>\n      </div>\n  );\n}\n\nexport default TurnoutSwitch;\n","import React, { useState } from 'react';\n// import { ReactComponent as LayoutSVG } from './layout.svg';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport Paper from '@material-ui/core/Paper';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport DoneIcon from '@material-ui/icons/Done';\nimport { MapInteractionCSS } from 'react-map-interaction';\n\nimport { linesConfig } from '../Api';\nimport TurnoutSwitch from './Switch';\nimport baseImg from './images/IDAWANY-base.png';\nimport './MapControl.scss';\n\nfunction MapControl(props) {\n\n  const { turnouts, onChange } = props;\n\n  const hideLines = ['Brown', 'Blue', 'Purple'];\n  const initialLines = linesConfig.map(line => ({ visible: !hideLines.includes(line.name), ...line }));\n\n  const [lines, setLines] = useState(initialLines);\n  const [showTurnouts, setShowTurnouts] = useState(true);\n\n  const [zoomState, setZoomState] = useState({\n    scale: 1,\n    translation: { x: 0, y: 0 }\n  });\n\n  const handleTurnoutSwitch = e => {\n    setShowTurnouts(e.target.checked);\n  }\n\n  const toggleLine = _line => {\n    const line = lines.find(line => line.name === _line.name);\n    line.visible = !line.visible;\n    setLines([...lines]);\n  }\n\n  const getSVGClassName = () => {\n    const classes = \n      lines.filter(line => line.visible).map(line => `show-line-${line.line}`);\n    if (showTurnouts) {\n      classes.push('show-turnouts');\n    }\n    return `layout-img ${classes.join(' ')}`;\n  }\n\n  const getTurnoutById = id => turnouts.find(t => id === t.id);\n\n  const getLinkedTurnout = turnout => \n    turnout.crossover\n      ? getTurnoutById(turnout.crossover)\n      : turnout.reverse\n        ? getTurnoutById(turnout.reverse)\n        : null;\n\n  return (\n    <Paper>\n      <Grid container width=\"100%\" direction=\"row\" >\n        <Grid item xs={12} className=\"filters\">\n          \n          <Box>\n            <Typography component=\"h5\" variant=\"h5\" gutterBottom>\n              Lines\n            </Typography>\n\n            {lines.map((line, idx) => (\n              <Chip\n                key={idx}\n                size=\"small\"\n                label={`${line.name}`}\n                variant=\"outlined\"\n                className=\"line-toggle\"\n                style={{ backgroundColor: line.color, opacity: line.visible ? 1 : 0.3 }}\n                onClick={() => toggleLine(line)}\n                onDelete={() => toggleLine(line)}\n                deleteIcon={line.visible ? <DoneIcon /> : null}\n                clickable\n              />\n            ))}\n            <FormControlLabel control={\n                <Switch value=\"showTurnouts\" onChange={handleTurnoutSwitch} checked={showTurnouts} />\n              } label=\"Show Turnouts\" />\n          </Box>\n\n        </Grid>\n        <Grid item xs={12}>\n          <MapInteractionCSS\n            scale={zoomState.scale}\n            translation={zoomState.translation}\n            onChange={({ scale, translation }) => setZoomState({ scale, translation })}\n            defaultScale={1}\n            defaultTranslation={{ x: 0, y: 0 }}\n            minScale={0.05}\n            maxScale={5}\n            showControls>\n            <div className=\"map-control\">\n              <div className={getSVGClassName()}>\n              {/* <img src={trackImg}  alt=\"test\" className=\"track-image\" /> */}\n                <img src={baseImg} className=\"layout-base-layer\"  alt=\"test\" width=\"100%\" />\n                {lines.filter(line => line.visible).map((line, idx) => (\n                  <img key={idx} src={line.img} className=\"layout-layer\" alt=\"test\" width=\"100%\" />\n                ))}\n                {showTurnouts && (\n                  <div className=\"switch-container\">\n                    {turnouts && turnouts.map(turnout => (\n                      <TurnoutSwitch key={turnout.id} className=\"layout-switch\" config={turnout} linked={getLinkedTurnout(turnout)} onChange={onChange} />\n                    ))}\n                  </div>\n                )}\n              </div>\n                \n               \n              </div>\n          </MapInteractionCSS>\n              \n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n\n\nexport default MapControl;\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport * as Colors from 'material-ui/colors';\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    type: 'dark',\n    primary: Colors.red,\n    secondary: Colors.lightGreen\n  },\n  background: {\n    default: Colors.grey[900]\n  },\n});\n\nexport default theme;\n\n// import { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\n\n\n// const theme = createMuiTheme({\n//   spacing: () => '8px',\n//   palette: {\n//     type: 'dark',\n//     primary: Colors.red500,\n//     secondary: Colors.lightGreenA200,\n//   }\n// });\n\n// export default theme;\n","import React, { useState, useEffect } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport CallSplit from '@material-ui/icons/CallSplit';\nimport MapIcon from '@material-ui/icons/Map';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport TrainIcon from '@material-ui/icons/Train';\nimport HttpsIcon from '@material-ui/icons/Https';\nimport Turnout from './Turnouts/Tunrout';\nimport Layout from './Layout/Layout';\nimport MapControl from './Layout/MapControl';\nimport api, { apiHost } from './Api';\n// THEME\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\nimport './App.css';\n\nfunction App() {\n\n  const [page, setPage] = useState('Conductor');\n  // const [page, setPage] = useState('Layout');\n\n  const [turnouts, setTurnouts] = useState({ data: null, status: 'idle' });\n  const [turnoutList, setTurnoutList] = useState([]);\n\n  useEffect(() => {\n    const fetchTurnouts = async () => {\n      setTurnouts({...turnouts, status: 'pending' });\n      try {\n        const response = await api.get();\n        setTurnouts({...turnouts, data: response, status: 'done' });\n      } catch(err) {\n        setTurnouts({...turnouts, status: 'error' });\n      }\n    }\n    if (turnouts.data === null && turnouts.status === 'idle') {\n      fetchTurnouts();\n    } else {\n      setTurnoutList(turnouts.data);\n  }\n  }, [turnouts]);\n\n  const navigate = (event, newValue) => {\n    setPage(newValue);\n  }\n\n  const handleSSLAuth = (event) => {\n      window.open(apiHost);\n  }\n\n  const handleChange = async data => {\n    async function getResults() {\n      let results = [];\n      for (let item of data) {\n          let r = await api.put(item);\n          results.push(r);\n      }\n      return results;\n    } \n\n    getResults().then(results => {\n      const newTurnouts = turnoutList.map(t => {\n        const match = results.find(r => r.id === t.id);\n        return match ? {...t, ...match} : t;\n      });\n      setTurnoutList([...newTurnouts]);\n    });\n\n  }\n\n  const getTurnoutById = id => turnoutList.find(t => id === t.id);\n\n  const getLinkedTurnout = turnout => \n    turnout.crossover\n      ? getTurnoutById(turnout.crossover)\n      : turnout.reverse\n        ? getTurnoutById(turnout.reverse)\n        : null;\n\n  return (\n    <MuiThemeProvider theme={theme}>\n    <CssBaseline />\n    <Box display=\"flex\" flexDirection=\"column\" height=\"100%\" width=\"100%\">\n      <Box  >\n        <AppBar position=\"sticky\">\n          <Toolbar>\n            <Typography variant=\"h6\" className=\"title\">\n              {page}\n            </Typography>\n            <IconButton\n                onClick={handleSSLAuth}\n                color=\"inherit\"\n              >\n                <HttpsIcon />\n              </IconButton>\n            \n          </Toolbar>\n        </AppBar>\n        </Box>\n        \n        <Box flexGrow={1} width=\"100%\" alignContent=\"center\" className=\"App-content\" mt={1}>\n            {turnouts.status  === 'done' && (\n                <Container maxWidth=\"lg\">\n                    {page === 'Turnouts' && (\n                    <Grid container spacing={2}>\n                        {turnoutList && turnoutList.map(turnout => (\n                        <Grid key={turnout.id} item sm={6} xs={12}>\n                            <Turnout \n                            config={turnout} \n                            linked={getLinkedTurnout(turnout)}\n                            onChange={handleChange} />\n                        </Grid>\n                        ))}\n                    </Grid>\n                    )}\n                    {page === 'Layout' && (<Layout turnouts={turnoutList} />)}\n                    {page === 'Settings' && (\n                    <Grid container spacing={1}>\n                        <p>Settings</p>\n                    </Grid>\n                    )}\n                    {page === 'Conductor' && (<MapControl turnouts={turnoutList} onChange={handleChange} />)}\n                </Container>\n            )}\n            {turnouts.status  === 'idle' || turnouts.status === 'pending' && (\n                <CircularProgress color=\"primary\" className=\"spinner\" />\n            )}\n            {turnouts.status  === 'error' && (\n                <h1>Error: could not load turnouts. Check settings and make sure the API host is running.</h1>\n            )}\n        </Box>\n        \n        <Box mt={1}>\n          <BottomNavigation\n            value={page}\n            onChange={navigate}\n            showLabels\n            className=\"App-footer\"\n          >\n          <BottomNavigationAction label=\"Conductor\" value=\"Conductor\" icon={<TrainIcon />} />\n            <BottomNavigationAction label=\"Turnouts\" value=\"Turnouts\" icon={<CallSplit />} />\n            <BottomNavigationAction label=\"Layout\" value=\"Layout\" icon={<MapIcon />} />\n          </BottomNavigation>\n        </Box>\n      </Box>\n    </MuiThemeProvider>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/IDAWANY-base.9c3d904a.png\";","module.exports = __webpack_public_path__ + \"static/media/IDAWANY-blueline.e0160c42.png\";","module.exports = __webpack_public_path__ + \"static/media/IDAWANY-brownline.9b239898.png\";","module.exports = __webpack_public_path__ + \"static/media/IDAWANY-greenline.deb95cb4.png\";","module.exports = __webpack_public_path__ + \"static/media/IDAWANY-magentaline.90f04987.png\";","module.exports = __webpack_public_path__ + \"static/media/IDAWANY-orangeline.6ff3ae42.png\";","module.exports = __webpack_public_path__ + \"static/media/IDAWANY-purpleline.57038a14.png\";","module.exports = __webpack_public_path__ + \"static/media/IDAWANY-redline.8c26ca8a.png\";","module.exports = __webpack_public_path__ + \"static/media/IDAWANY-yellowline.90eb524b.png\";","module.exports = __webpack_public_path__ + \"static/media/IDAWANY-switches.049c4d96.png\";"],"sourceRoot":""}